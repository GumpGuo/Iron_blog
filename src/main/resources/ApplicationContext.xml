<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 自动扫描 Service层的包-->
    <context:component-scan base-package="com.guo.service"/>
    <!--<context:component-scan base-package="com.guo.dao"/>-->
    <!-- 	<context:property-placeholder location="classpath:jdbc.properties"/> -->
    <!-- 引入properties配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
    </bean>
    <!-- 	配置数据库连接配置，使用BaseicDataSource -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <!-- 		连接驱动 -->
        <property name="driverClassName" value="${driver}"/>
        <!-- 		mysql地址 -->
        <property name="url" value="${url}"/>
        <!-- 		用户名 -->
        <property name="username" value="${username}"/>
        <!-- 		密码 -->
        <property name="password" value="${password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
    </bean>
    <!-- classpath:com/liu/ -->
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-cofig.xml"></property>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:com/guo/mapper/*.xml"></property>
    </bean>

     <!--DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 	    为mybatis的dao层进行扫描 -->
        <property name="basePackage" value="com.guo.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!-- 配置事务管理-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--&lt;!&ndash; 	shiro安全配置 &ndash;&gt;-->
    <!--&lt;!&ndash; 	注入自己定义的Realm &ndash;&gt;-->
    <!--<bean id="myRealm" class="com.guo.myRealm.myRealm"></bean>-->
    <!--<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">-->
    <!--<property name="realm" ref="myRealm" />-->
    <!--</bean>-->
    <!--<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">-->
    <!--&lt;!&ndash; 	    安全管理者 &ndash;&gt;-->
    <!--<property name="securityManager" ref="securityManager" />-->
    <!--&lt;!&ndash; 	    等行登陆的页面 &ndash;&gt;-->
    <!--<property name="loginUrl" value="/login.jsp"></property>-->
    <!--&lt;!&ndash; 	    过滤链 &ndash;&gt;-->
    <!--<property name="filterChainDefinitions">-->
    <!--<value>-->
    <!--/login=anon-->
    <!--/admin/**=authc-->
    <!--</value>-->
    <!--</property>-->
    <!--</bean>-->
    <!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor">-->
    <!--</bean>-->
    <!--<bean class="org.apache.shiro.spring.LifecycleBeanPostProcessor" depends-on="lifecycleBeanPostProcessor"></bean>-->
    <!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
    <!--<property name="securityManager" ref="securityManager"></property>-->
    <!--</bean>-->
    <!-- 事物增强属性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <!-- aop事物切入 -->
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.guo.service.*.*.*(..))"/>
    </aop:config>
</beans>